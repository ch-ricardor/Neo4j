##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

##
# RRE - Upstream
##
upstream theapache {
	server 10.1.1.5:8000;
}


##
# Connection redirection 301
# - Server names should be resolved by the DNS or hsts file
# Redirecting the ip request to a FQN reference
##
# server {
#        server_name 192.168.3.14;
#        return 301 $scheme://theserver.ch1.adsmexico.com$request_uri;
# }
# server {
#        server_name 10.1.1.1;
#        return 301 $scheme://theserver.ch1.adsmexico.com$request_uri;
# }
# server {
#        server_name www.theserver.ch1.adsmexico.com;
#        return 301 $scheme://theserver.ch1.adsmexico.com$request_uri;
# }


##
# Default server configuration
#
##
server {
	listen 80 default_server;
#	listen 8081 default_server;
#	listen [::]:80 default_server ipv6only=on;
	listen [::]:80 default_server;
#	listen [::]:8081 default_server;

	## RRE
	# Block access from specific countries
	##
	if ($allowed_country = no) {
		return 444;
	}

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	server_name _;

	root /var/www/html;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html index.php;

	##
	# General Location Configurations
	# to create Apache compatibility
	##

	location = /robots.txt {
		allow all;
		log_not_found off;
		access_log off;
	}
	location = /favicon.ico {
		try_files $uri =204;
	}
	##
	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	##
	location ~ /\.ht {
		deny all;
	}

	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;

		location ~ \.php$ {
			include snippets/fastcgi-php.conf;
	
			# With php7.0-cgi alone:
		#	fastcgi_pass 127.0.0.1:9000;
		#	# With php7.0-fpm:
			fastcgi_pass unix:/run/php/php7.0-fpm.sock;
		}
	}

	##
	# RRE Test to a proxy call
	# /myjunk/ -> http://remote_server[:port] 
	##
	location = /myjunk {
		# Force 404
	}
	location /myjunk {
		##
		# RRE Add trailing slash to any myjunk match
		# /myjunk -> /myjunk/ /myjunktest -> /myjunk/test
		##
		rewrite ^/myjunk(.*) /myjunk/$1;
		#echo 'esta es la primera ' $uri ;
	}

	##
	# With a Redirect request
	##
	location /myjunk/ {
		# echo 'esta es la segunda opcion' $uri;
		try_files $uri $uri/ @proxych3;
	}

	location @proxych3 {
		##
		# RRE /myjunk/... to /... <- remote path
		##
		rewrite ^/myjunk/(.*) /$1 break;
		include /etc/nginx/neufch_proxy_params;

		# proxy_pass http://10.1.1.5:8000;
		proxy_pass http://theapache;
		proxy_redirect default;
	}

	##
	# RRE - Regular redirection
	##
	location /eljunk/ {
		proxy_pass http://theapache/;
	}
	location /eljunkdash/ {
		proxy_pass http://theapache/eldashboard/;
	}

	## RRE
	# configuration of the phppgadmin
	##
	##
	# Dealing with uppercases phpPgAdmin
	# Example - rewrite
	##
	#location /PHPPGADMIN/ {
	#	rewrite ^/* /phppgadmin/ last;
	#}

	location /phppgadmin {
		root /usr/share;
		index index.php;

		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.php;

		# deny all;

		location ~ \.php$ {
			##
			# Fastcgi configurations
			##
			include snippets/fastcgi-php.conf;

			##
			# With php7.0-cgi alone:
			##
			# fastcgi_pass 127.0.0.1:9000;
			##
			# With php7.0-fpm:
			##
			fastcgi_pass unix:/run/php/php7.0-fpm.sock;
		}

#		location ~* \.(js|css|jpg|jpeg|gif|png|svg|ico|pdf)$ {
#			try_files $uri $uri/ ;
#		}


	}

	##
	# WORDPRESS Reverse Proxy Configuration
	# This configuration requires the modification
	# of wp-config.php to change the response url
	# and possible the plugin 
	# https://blog.virtualzone.de/2016/08/howto-https-ssl-wordpress-behind-proxy-nginx-haproxy-apache-lighttpd.html
	# ref: https://cmanios.wordpress.com/2014/04/12/nginx-https-reverse-proxy-to-wordpress-with-apache-http-and-different-port/
	##
	location /myblog {
#		#rewrite ^/myblog(.*) /$1 break;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Server $host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header Host $host;

		proxy_pass http://10.1.2.1/blog;

	}

	##
	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	# NOTE:
	# Set cgi.fix_pathinfo=0 in php.ini. 
	# This causes the PHP interpreter to only try the literal path given 
	# and to stop processing if the file is not found.
	##
	location ~ \.php$ {
		##
		# Fastcgi configurations
		##
		include snippets/fastcgi-php.conf;

		##
		# With php7.0-cgi alone:
		##
		# fastcgi_pass 127.0.0.1:9000;
		##
		# With php7.0-fpm:
		##
		fastcgi_pass unix:/run/php/php7.0-fpm.sock;
	}

	## 
	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	##
	location ~ /\.ht {
		deny all;
	}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
